{"version":3,"sources":["style.min.css","abstracts/helpers.scss","base/reset.scss","abstracts/variables.scss","abstracts/mixins.scss","base/fonts.scss","base/typography.scss","base/grid.scss","../../../../node_modules/include-media/dist/_include-media.scss","layout/page-header.scss","layout/page-main.scss","layout/page-footer.scss","layout/blog/s-blog.scss","pages/home.scss","pages/otherPages.scss","components/site-logo.scss","components/menu.scss","abstracts/functions.scss","components/hamburger.scss","components/section-title.scss"],"names":[],"mappings":"AAqGA,yEAAyE,qGAIzE,2BAGE,oBAAA,AAAc,oBAAd,AAAc,aAAA,8BAAA,ACrFD,6BDqFC,ACrFD,uBDqFC,ACrFD,mBAAA,mBAAA,AACA,cAAA,CDuFd,2CC/ED,oBAAA,AACa,oBADb,AACa,aAAA,4BAAA,ADqFX,6BCrFW,ADqFX,0BCrFW,ADqFX,sBAAA,mBAAA,AAAgB,cAAA,CAGlB,eC/EA,wBAAA,AACW,qBADX,AACW,sBAAA,CDgFV,sBAIC,yBAAA,AAAoB,sBAApB,AAAoB,kBAAA,CAGtB,aACE,sBAAA,AAAsB,mBAAtB,AAAsB,oBAAA,CAGxB,eACE,uBAAA,AAA4B,oBAA5B,AAA4B,0BAAA,CAG9B,WACE,wBAAA,AAAwB,qBAAxB,AAAwB,sBAAA,CAG1B,aACE,qBAAA,AAA0B,kBAA1B,AAA0B,wBAAA,CAG5B,4FAKE,SAAU,UC5CZ,eACW,CD8CV,UCpCD,mBAAU,0BAAA,AACW,uBAAA,eACJ,CDwChB,KE3JC,8BAAA,AAAsB,sBAAA,WACV,CF+Jb,iBEvJC,2BAAA,ACwCsB,kBAAA,CHqHvB,iBIpHG,mBAAA,aACA,CJmHH,AAKA,YIzHG,mBAAA,aACA,CJwHH,KEzJC,mCACA,kCF6JA,gBAAiB,cE1JV,mCACM,gBACG,WACJ,CF4Jb,SEvJD,oBAAA,AAAW,oBAAX,AAAW,aAAA,4BAAA,AF4JT,6BE5JS,AF4JT,0BE5JS,AF4JT,sBAAA,gBAAiB,kBExJjB,iBACiB,CF0JlB,WEpJC,mBAAA,AAAW,oBAAX,AAAW,WAAA,CFwJZ,IKnMD,cAAU,eACK,WACR,CL2MN,WKtMD,oBAAmB,2DACjB,gBACa,iBACF,CL0MZ,iCKnMC,8BAAA,WACA,kBL0MA,gBAAoB,oBKtMC,oBLyMrB,cAAe,mCAGf,iCAAmC,CMjOrC,wBAGE,eAAK,CACP,wBAGE,eHiCmB,CHkMpB,6CM/MC,8BHKqB,gBH2NrB,SAAU,UM5NJ,CN8NP,OMvNC,eHdoB,eAUC,CHiOtB,OAIC,cAAgB,CAGjB,cM3NC,gBAAA,eACe,CN4NjB,OMzNA,cAIS,CN4NT,OMlNA,cAAI,CNsNH,cMrNC,eAAgB,CNuNlB,OAEE,cAAgB,CAEjB,OM9MC,eNmNA,eMlNU,CNmNX,EAGC,cIhLyD,CJiL1D,EAGC,UMpNY,CNsNb,kBADC,oBMpNW,CN0NZ,WAGC,kBACA,qBAAuB,CAGzB,IOzTE,eJMsB,CHqTvB,MQmPG,UR9OF,QOnUF,CPoUC,SAGC,mBACA,mBACA,yBQwOE,aAAQ,CRtOX,kBQsOG,gBRlOF,kBACA,iBO/Ue,CPgVhB,yBAGC,WAEA,kBAAmB,cO7TL,QPgUd,OAAQ,mCAAA,AQwNmB,+BRxNnB,AQwNmB,2BAAA,gBRrN3B,WACA,UAAY,CAGd,sBACE,gBAAiB,gBQgNI,eR7MrB,gBOzTG,CP0TJ,4BAIC,kBAAmB,iBQwME,WRrMrB,eACA,cAAe,cQoMI,CRlMpB,cQkMG,cAAiB,CR9LpB,QQ8LG,eAAiB,MRzLnB,OACA,QAAS,aQwLC,mEAAA,ADxgBG,2DCwgBH,ADxgBG,sDCwgBH,ADxgBG,mDCwgBH,ADxgBG,8EAAA,CPmVd,kBOnVG,oBAAA,APuVF,oBOvVE,APuVF,aAAA,qBAAA,AACA,kBADA,AACA,yBAAA,yBAAA,AAAoB,sBAApB,AAAoB,mBAAA,kBQgLC,iBR7KrB,aACA,WAAa,CAGf,WACE,aAAc,kBQwKO,SRrKrB,WACA,WAAY,YQoKF,iBRjKV,eACA,iBAAmB,CAGrB,yBACE,kBAAmB,UQ4JT,SDhgBR,CPuWH,wDOvWG,aAAkB,CP2WrB,kEO3WG,yBAAkB,CP+WrB,QO/WG,oBAAA,APmXF,oBOnXE,APmXF,aAAA,sBAAA,AOhYuD,mBPgYvD,AOhYuD,oBAAA,CPiYxD,aAGC,gBOpYuD,CPqYxD,uBAGC,kBACA,gBAAoB,eQoID,iBRjInB,WACA,iBAAkB,yBQgIS,kBR7H3B,oCAAA,AOlYiD,+BPkYjD,AOlYiD,2BAAA,CPmYlD,6BAGC,yBOtYiD,CPuYlD,+BAGC,eOnYe,CPoYhB,MAGC,cACA,kBAAoB,CAGtB,WACE,YAAc,CAGhB,yBACE,aAAe,CAGjB,cACE,kBAAmB,SQoGT,WRjGV,kBACA,gBAAiB,oBAAA,AQgGP,oBRhGO,AQgGP,aAAA,4BAAA,AR7FV,6BQ6FU,AR7FV,0BQ6FU,AR7FV,sBAAA,aAC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","file":"style.min.css","sourcesContent":["//* Vendors *//\r\n@import './node_modules/include-media/dist/include-media';\r\n\r\n//* Abstracts modules *//\r\n@import 'abstracts/main';\r\n\r\n//* Base modules *//\r\n@import 'base/main';\r\n\r\n//* Layout modules *//\r\n@import 'layout/main';\r\n\r\n//* Pages modules *//\r\n@import 'pages/main';\r\n\r\n//* Components *//\r\n@import 'components/main';","// This is the most used helpers.\r\n//\r\n// You can remove or add your own helpers in this file.\r\n\r\n// // // // // //\r\n// Flex elements\r\n// // // // // //\r\n\r\n.flex-row,\r\n%flex-row {\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.flex-column,\r\n%flex-column {\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.ai-flex-start,\r\n%ai-flex-start {\r\n  align-items: flex-start;\r\n}\r\n\r\n.ai-cetner,\r\n%ai-center {\r\n  align-items: center;\r\n}\r\n\r\n.ai-flex-end,\r\n%ai-flex-end {\r\n  align-items: flex-end;\r\n}\r\n\r\n.jc-flex-start,\r\n%jc-flex-start {\r\n  justify-content: flex-start;\r\n}\r\n\r\n.jc-center,\r\n%jc-center {\r\n  justify-content: center;\r\n}\r\n\r\n.jc-flex-end,\r\n%jc-flex-end {\r\n  justify-content: flex-end;\r\n}\r\n\r\n// // // // //\r\n// Visibility \r\n// // // // //\r\n\r\n.hidden-desktop,\r\n%hidden-desktop {\r\n  @include media('>tablet-lg') {\r\n    display: none !important;\r\n  }\r\n}\r\n\r\n.visible-desktop,\r\n%visible-desktop {\r\n  @include media('>tablet-lg') {\r\n    display: block !important;\r\n  }\r\n}\r\n\r\n.hidden-tablet,\r\n%hidden-tablet {\r\n  @include media('>=tablet-sm', '<desktop-sm') {\r\n    display: none !important;\r\n  }\r\n}\r\n\r\n.visible-tablet,\r\n%visible-tablet {\r\n  @include media('>=tablet-sm', '<desktop-sm') {\r\n    display: block !important;\r\n  }\r\n}\r\n\r\n.hidden-mobile,\r\n%hidden-mobile {\r\n  @include media('>=phone-sm', '<tablet-sm') {\r\n    display: none !important;\r\n  }\r\n}\r\n\r\n.visible-mobile,\r\n%visible-mobile {\r\n  @include media('>=phone-sm', '<tablet-sm') {\r\n    display: block !important;\r\n  }\r\n}\r\n\r\n// // // //\r\n// Resets\r\n// // // //\r\n\r\n%indentreset {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n%listreset {\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n}\r\n\r\n/// * Helper class to truncate and add ellipsis to a string too long for it to fit\r\n/// * on a single line.\r\n/// * 1. Prevent content from wrapping, forcing it on a single line.\r\n/// * 2. Add ellipsis at the end of the line.\r\n\r\n.ellipsis {\r\n  white-space: nowrap; // 1\r\n  text-overflow: ellipsis; // 2 \r\n  overflow: hidden;\r\n}","// This is base reset for global components.\r\n//\r\n// Note: If you use a framework that includes base styling then you need to remove this file.\r\n\r\nhtml {\r\n  box-sizing: border-box;\r\n  height: 100%;\r\n}\r\n\r\n*, *:before, *:after {\r\n  box-sizing: inherit;\r\n}\r\n\r\n*::selection {\r\n  background: map-deep-get($colors, 'base', 'selection');\r\n  color: inherit;\r\n}\r\n\r\nbody {\r\n  @include font-smoothing(on);\r\n  background: map-deep-get($colors, 'base', 'white');\r\n  color: map-deep-get($colors, 'base', 'lighten-black');\r\n  font: #{map-get($font-size, 'base')}/#{map-get($line-height, 'base')} #{map-get($fonts, 'base-sans-serif')};\r\n  min-width: map-get($breakpoints, 'phone-sm');\r\n  height: 100%;\r\n}\r\n\r\n#wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100%;\r\n  position: relative;\r\n  overflow-x: hidden;\r\n}\r\n\r\n.page-main {\r\n  flex-grow: 1;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n}\r\n\r\n// adaptive images\r\nimg {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n// hide tel links on desktop\r\n@media only screen and (min-width: 1025px) {\r\n    a[href^=\"tel\"], a[href^=\"skype\"], a[href^=\"sms\"] {\r\n    cursor: default;\r\n    pointer-events: none;\r\n  }\r\n}","// Global variables\r\n//\r\n// Base font styles for headings and links.\r\n\r\n$animation-time: .3s;\r\n$preloader-antimation-time: 1.8s;\r\n\r\n$grid: (\r\n  'container': (\r\n    'desktop-lg': 1920px,\r\n    'desktop-md': 1450px,\r\n    'desktop': 1170px,\r\n    'tablet': 970px,\r\n    'tablet-sm': 615px,\r\n    'phone': 100%\r\n  ),\r\n  'columns-number': (\r\n    'desktop': 12,\r\n    'tablet': 12,\r\n    'mobile': 4\r\n  ),\r\n);\r\n\r\n$font-size: (\r\n  'h1-font-size': 90px,\r\n  'h2-font-size': 75px,\r\n  'h3-font-size': 48px,\r\n  'h4-font-size': 30px,\r\n  'h5-font-size': 28px,\r\n  'h6-font-size': 18px,\r\n  'base': 16px\r\n);\r\n\r\n$line-height: (\r\n  'h1-line-height': 1.5,\r\n  'h2-line-height': 1.5,\r\n  'h3-line-height': 1.5,\r\n  'h4-line-height': 1.5,\r\n  'h5-line-height': 1.5,\r\n  'h6-line-height': 1.5,\r\n  'base': 1.24em\r\n);\r\n\r\n$fonts: (\r\n  'base-sans-serif': unquote(\"'Roboto', sans-serif\"),\r\n  'base-serif': unquote(\"'Montserrat', sans-serif\"),\r\n);\r\n\r\n$colors: (\r\n  'base': (\r\n    'white': #fff,\r\n    'black': #000,\r\n    'lighten-black': lighten(#000, 15%),\r\n    'link-color': #39F,\r\n    'selection': #B4D5FF\r\n  ),\r\n  'theme': (\r\n    'yellow': #FDE93C,\r\n    'dark': #313131,\r\n    'satan': #666,\r\n    'grey': #f8f8f8,\r\n    'error': #ff3c3c,\r\n    'placeholder': #999,\r\n    'logo-bg': #7577CD\r\n  )\r\n);\r\n\r\n// Vars for forms\r\n$forms: (\r\n  'form-font-family': unquote(\"Arial, 'Helvetica Neue', Helvetica, sans-serif\"),\r\n  'form-element-padding': unquote(\"0.4em 0.7em\"),\r\n  'form-element-border-color': #999,\r\n  'form-element-focus-border-color': #000,\r\n  'placeholder-color': #999\r\n);\r\n\r\n// Base media breakpoints\r\n$breakpoints: (\r\n  'desktop-lg': 2560px,\r\n  'desktop-md': 1440px,\r\n  'desktop-sm': 1200px,\r\n  'tablet-lg' : 1024px,\r\n  'tablet-md' : 980px,\r\n  'tablet-sm' : 768px,\r\n  'phone-lg'  : 480px,\r\n  'phone-md'  : 375px,\r\n  'phone-sm'  : 320px\r\n);\r\n\r\n// Keywords for include media mixin\r\n$media-expressions: (\r\n  'screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x': '(-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi)',\r\n  'retina3x': '(-webkit-min-device-pixel-ratio: 2.5), (min-resolution: 240dpi)'\r\n);\r\n\r\n// z-indexes, using: z-index: z('SEMANTIC_VALUE');\r\n$z-indexes: (\r\n  'preloader',        // 5\r\n  'modal',            // 4\r\n  'hight',            // 3\r\n  'content',          // 2\r\n  'low'               // 1\r\n);","// Most used mixins.\r\n//\r\n// Note: If you use a framework (bootstrap, zurb etc.) that includes mixins you can import them too or remove this file.\r\n\r\n/*\r\n    Relative centering\r\n    Usage: \r\n    @include relative-centering(top) to vertical centering;\r\n    @include relative-centering(left) to horizontal centering; \r\n*/\r\n@mixin relative-centering($position) {\r\n  position: relative;\r\n  $position: 50%;\r\n  transform: translate(-50%);\r\n}\r\n\r\n/* Absolute centering\r\nThe same usage like Relative centering */\r\n@mixin absolute-vertical-centering {\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n@mixin absolute-horizontal-centering {\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n/*\r\n    Flex centering content in wrapper\r\n    Usage:\r\n    @include flex-centering(relative, center);\r\n    css output:\r\n    .className {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      position: relative;\r\n    }\r\n*/\r\n@mixin flex-centering($justify-content:center) {\r\n  display: flex;\r\n  justify-content: $justify-content;\r\n  align-items: center;\r\n}\r\n\r\n/*\r\n    font-smothing\r\n    @include font-smoothing(on);\r\n    @include font-smoothing(off); \r\n*/\r\n@mixin font-smoothing($value: on) {\r\n  @if $value==on {\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  @else {\r\n    -webkit-font-smoothing: subpixel-antialiased;\r\n    -moz-osx-font-smoothing: auto;\r\n  }\r\n}\r\n\r\n/*\r\n    Mixin for styling form-placeholders\r\n    @example scss - Usage\r\n    @include placeholder {\r\n      color: #333;\r\n    }\r\n    input[type='text'],\r\n    input[type='tel'],\r\n    input[type='email'] {\r\n      @include placeholder {\r\n        color: red;\r\n      }\r\n    } \r\n*/\r\n\r\n@mixin placeholder {\r\n  &::-webkit-input-placeholder {\r\n    @content;\r\n  }\r\n  &::-moz-placeholder {\r\n    opacity: 1;\r\n    @content;\r\n  }\r\n  &:-moz-placeholder {\r\n    @content;\r\n  }\r\n  &:-ms-input-placeholder {\r\n    @content;\r\n  }\r\n  &.placeholder {\r\n    @content;\r\n  }\r\n}\r\n\r\n/*\r\n    When you use ::before and ::after,\r\n    you always need these three lines of code. Using this mixin,\r\n    you save your time writing them.\r\n    See below for an example of using mixin without any arguments.\r\n    .element::after {\r\n      @include pseudo;\r\n      top: -1rem;\r\n      left: -1rem;\r\n      width: 1rem;\r\n      height: 1rem;\r\n    }\r\n    CSS output: \r\n    .element::after {\r\n      display: block;\r\n      position: absolute;\r\n      content: '';\r\n      top: -1rem;\r\n      left: -1rem;\r\n      width: 1rem;\r\n      height: 1rem;\r\n    }\r\n*/\r\n\r\n@mixin pseudo($display: block, $pos: absolute, $content: '') {\r\n  content: $content;\r\n  display: $display;\r\n  position: $pos;\r\n}\r\n\r\n/*\r\n    Square\r\n\r\n    Usage:\r\n    .element {\r\n      @include square(60px);\r\n    }\r\n\r\n    CSS output: \r\n    .element {\r\n      width: 60px;\r\n      height: 60px;\r\n    }\r\n*/\r\n@mixin square($size) {\r\n  width: $size;\r\n  height: $size;\r\n}\r\n\r\n/*\r\n    Responsive switch\r\n\r\n    Usage:\r\n    .element {\r\n      @include square('tablet-lg');\r\n    }\r\n    CSS output: \r\n    .element {\r\n      display: none;\r\n    }\r\n    @media (max-width: 1024px) {\r\n      .hamburger {\r\n        display: block;\r\n      }\r\n    }\r\n*/\r\n@mixin mobileVisible($breakPoint) {\r\n  display: none;\r\n  @include media('<=#{$breakPoint}') {\r\n    display: block;\r\n  }\r\n}","@import url('https://fonts.googleapis.com/css?family=Abel&display=swap');\r\n@import url('https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,400i,600,700&display=swap');\r\n\r\n@font-face {\r\n  font-family: 'icomoon';\r\n  src: url('/fonts/icomoon/icomoon.woff?9e0ffy') format('woff');\r\n  font-weight: normal;\r\n  font-style: normal;\r\n}\r\n\r\n[class^=\"icon-\"], [class*=\" icon-\"] {\r\n  /* use !important to prevent issues with browser extensions that change fonts */\r\n  font-family: 'icomoon' !important;\r\n  speak: none;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-variant: normal;\r\n  text-transform: none;\r\n  line-height: 1;\r\n\r\n  /* Better Font Rendering =========== */\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n.icon-arrow-back:before {\r\n  content: \"\\e901\";\r\n}\r\n.icon-arrow-down:before {\r\n  content: \"\\e900\";\r\n}","// Typography\r\n//\r\n// Base font styles for headings and links.\r\n\r\nh1, .h1,\r\nh2, .h2,\r\nh3, .h3,\r\nh4, .h4,\r\nh5, .h5,\r\nh6, .h6,\r\n.h {\r\n  font-family: map-get($fonts, 'base-sans-serif');\r\n  font-weight: bold;\r\n  margin: 0;\r\n  color: map-deep-get($colors, 'base', 'black');\r\n}\r\n\r\nh1, .h1 {\r\n  font-size: map-get($font-size, 'h1-font-size');\r\n  line-height: map-get($line-height, 'h1-line-height');\r\n  \r\n}\r\n\r\nh2, .h2 {\r\n  font-size: map-get($font-size, 'h2-font-size');\r\n  line-height: map-get($line-height, 'h2-line-height');\r\n  font-weight: 600;\r\n}\r\n\r\nh3, .h3 {\r\n  font-size: map-get($font-size, 'h3-font-size');\r\n  line-height: map-get($line-height, 'h3-line-height');\r\n  font-weight: 600;\r\n}\r\n\r\nh4, .h4 {\r\n  font-size: map-get($font-size, 'h4-font-size');\r\n  line-height: map-get($line-height, 'h4-line-height');\r\n  \r\n}\r\n\r\nh5, .h5 {\r\n  font-size: map-get($font-size, 'h5-font-size');\r\n  line-height: map-get($line-height, 'h5-line-height');\r\n}\r\n\r\nh6, .h6 {\r\n  font-size: map-get($font-size, 'h6-font-size');\r\n  line-height: map-get($line-height, 'h6-line-height');\r\n}\r\n\r\np {\r\n  margin: 0 0 1em;\r\n}\r\n\r\na {\r\n  color: map-deep-get($colors, 'base', 'link-color');\r\n  text-decoration: none;\r\n  &:hover,\r\n  &:focus {\r\n    text-decoration: none; \r\n  }\r\n}\r\n\r\nblockquote {\r\n  font-style: italic;\r\n  margin: 0 1.2em 1.24em;\r\n}\r\n\r\nnav {\r\n  list-style: none;\r\n}\r\n\r\nol, ul {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.caption {\r\n  font: 600 14px/16px;\r\n  letter-spacing: 1px;\r\n  text-transform: uppercase;\r\n  display: block;\r\n  &--preline {\r\n    margin: 0 0 10px;\r\n    position: relative;\r\n    padding-left: 15px;\r\n    &:before {\r\n      @include pseudo;\r\n      display: block;\r\n      top: 50%;\r\n      left: 0;\r\n      transform: translateY(-50%);\r\n      background: #000;\r\n      height: 1px;\r\n      width: 10px;\r\n    }\r\n  }\r\n  &--desctiption {\r\n    margin: 0 0 30px;\r\n    max-width: 550px;\r\n    font-size: 15px;\r\n    line-height: 22px;\r\n  }\r\n}",".container,\r\n.container-fluid {\r\n  position: relative;\r\n  max-width: map-deep-get($grid, 'container', 'desktop-lg');\r\n  width: 100%;\r\n  height: inherit;\r\n  margin: 0 auto;\r\n  padding: 0 15px;\r\n  @include media('<desktop-lg') {\r\n    max-width: map-deep-get($grid, 'container', 'desktop-md');\r\n  }\r\n  @include media('<=desktop-md'){\r\n    max-width: map-deep-get($grid, 'container', 'desktop');\r\n  }\r\n  @include media('<desktop-sm'){\r\n    max-width: map-deep-get($grid, 'container', 'tablet');\r\n  }\r\n  @include media('<tablet-lg'){\r\n    max-width: map-deep-get($grid, 'container', 'tablet-sm');\r\n  }\r\n  @include media('<tablet-sm') {\r\n    max-width: map-deep-get($grid, 'container', 'phone');\r\n  }\r\n}\r\n\r\n[class^=\"col-\"] {\r\n  padding: 0 15px;\r\n}\r\n\r\n// \r\n// Desktop grid, using from 981px\r\n// \r\n\r\n$columns-width-default: ();\r\n\r\n@for $i from 1 through map-deep-get($grid, 'columns-number', 'desktop') {\r\n  $columns-width-default: append($columns-width-default, $i * 100%/#{map-deep-get($grid, 'columns-number', 'desktop')});\r\n}\r\n\r\n@for $i from 1 through length($columns-width-default) {\r\n  @include media('>tablet-lg') {\r\n    .col-#{$i} {\r\n      width: nth($columns-width-default, $i);\r\n    }\r\n  }\r\n}\r\n\r\n@for $i from 1 through length($columns-width-default) {\r\n  @include media('>tablet-lg') {\r\n    .col-offset-#{$i} {\r\n      margin-left: nth($columns-width-default, $i) !important;\r\n    }\r\n  }\r\n}\r\n\r\n.col-offset-none {\r\n  @include media('>tablet-lg') {\r\n    margin-left: 0 !important;\r\n  }\r\n}\r\n\r\n@for $i from 1 through 5 {\r\n  .order-#{$i} {\r\n    @include media('>tablet-lg') {\r\n      order: #{$i} !important;\r\n    }\r\n  }\r\n}\r\n\r\n// \r\n// Tablet grid, using from 768px to 1023px \r\n//\r\n$columns-width-tablet: ();\r\n\r\n@for $i from 1 through map-deep-get($grid, 'columns-number', 'tablet') {\r\n  $columns-width-tablet: append($columns-width-tablet, $i * 100%/#{map-deep-get($grid, 'columns-number', 'tablet')});\r\n}\r\n\r\n@for $i from 1 through length($columns-width-tablet) {\r\n  @include media('>=tablet-sm', '<desktop-sm') {\r\n    .col-t-#{$i} {\r\n      width: nth($columns-width-tablet, $i);\r\n    }\r\n  }\r\n}\r\n\r\n@for $i from 1 through length($columns-width-tablet) {\r\n  @include media('>=tablet-sm', '<desktop-sm') {\r\n    .col-t-offset-#{$i} {\r\n      margin-left: nth($columns-width-tablet, $i) !important;\r\n    }\r\n  }\r\n}\r\n\r\n.col-t-offset-none {\r\n  @include media('>=tablet-sm', '<desktop-sm') {\r\n    margin-left: 0 !important;\r\n  }\r\n}\r\n\r\n@for $i from 1 through 5 {\r\n  .t-order-#{$i} {\r\n    @include media('>=tablet-sm', '<desktop-sm') {\r\n      order: #{$i} !important;\r\n    }\r\n  }\r\n}\r\n\r\n// \r\n// Mobile grid, using from 320px to 767px \r\n//\r\n$columns-width-mobile: ();\r\n\r\n@for $i from 1 through map-deep-get($grid, 'columns-number', 'mobile') {\r\n  $columns-width-mobile: append($columns-width-mobile, $i * 100%/#{map-deep-get($grid, 'columns-number', 'mobile')});\r\n}\r\n\r\n@for $i from 1 through length($columns-width-mobile) {\r\n  @include media('>=phone-sm', '<tablet-sm') {\r\n    .col-m-#{$i} {\r\n      width: nth($columns-width-mobile, $i);\r\n    }\r\n  }\r\n}\r\n\r\n@for $i from 1 through length($columns-width-mobile) {\r\n  @include media('>=phone-sm', '<tablet-sm') {\r\n    .col-m-offset-#{$i} {\r\n      margin-left: nth($columns-width-mobile, $i) !important;\r\n    }\r\n  }\r\n}\r\n\r\n.col-m-offset-none {\r\n  @include media('>=phone-sm', '<tablet-sm') {\r\n    margin-left: 0 !important;\r\n  }\r\n}\r\n\r\n@for $i from 1 through 5 {\r\n  .m-order-#{$i} {\r\n    @include media('>=phone-sm', '<tablet-sm') {\r\n      order: #{$i} !important;\r\n    }\r\n  }\r\n}","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","$header-animation-time: 0.5s;\r\n\r\n// body.navbar-opened {\r\n//     @include media('<tablet-lg') {\r\n//         overflow: hidden;\r\n//     }\r\n// }\r\n\r\n.header {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 1000;\r\n  transition: background $header-animation-time ease, box-shadow $header-animation-time ease;\r\n\r\n  @include media(\"<tablet-lg\") {\r\n    background: #fff;\r\n\r\n    &.scrolled {\r\n      box-shadow: 0 1px 4px 0 #eee;\r\n    }\r\n  }\r\n}\r\n\r\n.header-container {\r\n  @include flex-centering(flex-end);\r\n  position: relative;\r\n  max-width: 1720px;\r\n  padding: 20px;\r\n  margin: auto;\r\n}\r\n\r\n.close-btn {\r\n  display: none;\r\n  position: absolute;\r\n  top: 40px;\r\n  right: 40px;\r\n  width: 40px;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  font-size: 30px;\r\n  text-align: center;\r\n\r\n  @include media(\"<tablet-lg\") {\r\n    display: block;\r\n  }\r\n}\r\n\r\n.navbar-holder {\r\n  &-secondary {\r\n    position: absolute;\r\n    left: 20px;\r\n    top: 128px;\r\n    @include media('<=desktop-sm') {\r\n      top: 90px;\r\n    }\r\n\r\n    .navbar-secondary {\r\n      @extend %listreset;\r\n\r\n      .navbar-item {\r\n        margin-left: 0;\r\n        &:first-of-type {\r\n          @include media(\">=tablet-lg\") {\r\n            display: none;\r\n          }\r\n        }\r\n\r\n        .nav-link {\r\n          text-transform: capitalize;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.navbar {\r\n  @extend %listreset;\r\n  display: flex;\r\n  align-items: flex-end;\r\n\r\n  @include media(\"<tablet-lg\") {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    height: auto;\r\n  }\r\n\r\n  &-item {\r\n    margin-left: 24px;\r\n\r\n    @include media(\"<tablet-lg\") {\r\n    }\r\n\r\n    .nav-link {\r\n      font-style: normal;\r\n      font-weight: normal;\r\n      font-size: 16px;\r\n      line-height: 180%;\r\n      color: #808080;\r\n      text-align: right;\r\n      text-transform: uppercase;\r\n      position: relative;\r\n      transition: text-shadow 0.25s;\r\n\r\n      &:hover {\r\n        text-shadow: 0 0 .7px #000;\r\n      }\r\n\r\n      @include media(\"<tablet-lg\") {\r\n        font-size: 40px;\r\n      }\r\n\r\n      @include media(\"<=phone-lg\") {\r\n        font-size: 32px;\r\n      }\r\n    }\r\n    &--active {\r\n      .nav-link {\r\n        font-weight: bold;\r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      @include media(\"<tablet-lg\") {\r\n        .nav-link {\r\n          &::before {\r\n            display: none;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.logo {\r\n  display: block;\r\n  margin-bottom: 90px;\r\n  @include media('<=desktop-sm') {\r\n         width: 120px;\r\n         margin-bottom: 40px;\r\n        }\r\n}\r\n\r\n.logo-icon {\r\n  display: none;\r\n  &.another-pages {\r\n    display: block;\r\n  }\r\n}\r\n\r\n.menu-toggler {\r\n  position: absolute;\r\n  top: 30px;\r\n  right: 40px;\r\n  padding: 14px 11px;\r\n  background: #222;\r\n  display: flex;\r\n  flex-direction: column;\r\n  outline: none;\r\n  max-width: 40px;\r\n  min-width: 40px;\r\n  box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.13);\r\n  opacity: 0;\r\n  transition: all $header-animation-time ease;\r\n\r\n  @include media(\"<tablet-lg\") {\r\n    top: 20px;\r\n    display: block !important;\r\n    opacity: 1;\r\n  }\r\n\r\n  @include media(\"<=phone-lg\") {\r\n    right: 20px;\r\n  }\r\n\r\n  span {\r\n    width: 18px;\r\n    height: 2px;\r\n    background: #fff;\r\n    display: block;\r\n\r\n    & + span {\r\n      margin-top: 3px;\r\n    }\r\n  }\r\n}\r\n\r\n#home-page {\r\n\r\n  .header {\r\n    &.sticky {\r\n      background: white;\r\n      border-bottom: 2px solid#F0F0F0;\r\n\r\n      .navbar-item {\r\n        .nav-link {\r\n          color: #808080;\r\n        }\r\n      }\r\n\r\n      .navbar-secondary {\r\n        .navbar-item {\r\n          .nav-link {\r\n            color: #fff;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .navbar-item {\r\n    .nav-link {\r\n      color: #fff;\r\n    }\r\n  }\r\n  .logo-icon {\r\n    display: block;\r\n    &.another-pages {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n\r\n#secondaryPage {\r\n\r\n  .header {\r\n    &.sticky {\r\n      background: white;\r\n      border-bottom: 2px solid#F0F0F0;\r\n\r\n      .navbar-item {\r\n        .nav-link {\r\n          color: #808080;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",".page-main {\r\n  &#home-page {\r\n    @extend %flex-column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  .main-page {\r\n    text-align: center;\r\n  }\r\n}",".page-footer {\r\n  padding: 15px 0;\r\n  .copyright {\r\n    margin: 0;\r\n    font: 400 12px/1.24em map-get($fonts, 'Abel');\r\n    color: map-deep-get($colors, 'theme', 'dark');\r\n    .author,\r\n    .company {\r\n      color: map-deep-get($colors, 'theme', 'dark');\r\n      &:hover {\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n  }\r\n}",".s-blog {\r\n  padding: 30px 0;\r\n}",".section {\r\n  &-main {\r\n    width: 100%;\r\n  }\r\n  &-main-row {\r\n    position: relative;\r\n    height: 100vh;\r\n    width: 100%;\r\n    @include media('<=desktop-sm') {\r\n      height: 750px;\r\n    }\r\n\r\n    .section-info {\r\n      width: 100%;\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      text-align: center;\r\n      z-index: 1;\r\n      text-align: center;\r\n      margin-top: -32px;\r\n\r\n      .h1 {\r\n        font-family: map-get($fonts, \"base-serif\");\r\n        font-style: normal;\r\n        font-weight: 200;\r\n        font-size: 96px;\r\n        line-height: 1.3;\r\n        text-align: center;\r\n        color: #fff;\r\n        margin-bottom: 10px;\r\n        @include media('<=desktop-sm') {\r\n          font-size: 50px;\r\n          letter-spacing: 1px;\r\n        }\r\n      }\r\n\r\n      .subtitle {\r\n        font-style: normal;\r\n        font-weight: 900;\r\n        font-size: 24px;\r\n        letter-spacing: 9px;\r\n        text-transform: uppercase;\r\n        color: #ffffff;\r\n      }\r\n    }\r\n\r\n    .arrow-anchor {\r\n      position: absolute;\r\n      bottom: 150px;\r\n      left: 50%;\r\n      transform: translate(0, -50%);\r\n      z-index: 1;\r\n      @include media('<=desktop-sm') {\r\n      bottom: 20px;\r\n    }\r\n      .arrow-down {\r\n        background-color: transparent;\r\n        padding: 0;\r\n        min-width: auto;\r\n        border: none;\r\n\r\n        svg {\r\n          @include media('<=desktop-sm') {\r\n            width: 40px;\r\n            height: 30px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .section-media {\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      background-size: cover;\r\n      background-position: top center;\r\n      background-repeat: no-repeat;\r\n    }\r\n  }\r\n\r\n  &-main-categories {\r\n    display: flex;\r\n    height: 100vh;\r\n    width: 100%;\r\n    @include media('<=desktop-sm') {\r\n          height: 750px;\r\n        }\r\n\r\n    .item {\r\n      width: 33.33%;\r\n      // padding-bottom: 100%;\r\n      position: relative;\r\n\r\n      &:after {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        background: rgba(0, 0, 0, 0.3);\r\n        transition: opacity 0.25s;\r\n        cursor: pointer;\r\n      }\r\n\r\n      &:hover {\r\n        &:after {\r\n          opacity: 0;\r\n        }\r\n        .label {\r\n            opacity: 1;\r\n        }\r\n      }\r\n\r\n      .label {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        font-family: Montserrat;\r\n        font-style: normal;\r\n        font-weight: 500;\r\n        font-size: 48px;\r\n        line-height: 1.3;\r\n        text-transform: uppercase;\r\n        opacity: 0;\r\n        transition: 0.25s;\r\n        text-align: center;\r\n        color: #ffffff;\r\n        transform: translate(-50%, -50%);\r\n        z-index: 1;\r\n      }\r\n\r\n      img {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n      }\r\n    }\r\n  }\r\n\r\n  &-about {\r\n    .h2 {\r\n      font-family: Montserrat;\r\n      font-style: normal;\r\n      font-weight: 200;\r\n      font-size: 48px;\r\n      line-height: 180%;\r\n      color: #808080;\r\n\r\n      &.brands {\r\n        font-family: Roboto;\r\n        font-style: normal;\r\n        font-weight: 900;\r\n        font-size: 18px;\r\n        line-height: 1.3;\r\n        letter-spacing: 0.4em;\r\n        text-transform: uppercase;\r\n        color: #303030;\r\n        margin-bottom: 30px;\r\n      }\r\n    }\r\n\r\n    p {\r\n      font-family: Roboto;\r\n      font-style: normal;\r\n      font-weight: normal;\r\n      font-size: 14px;\r\n      line-height: 140%;\r\n      color: #808080;\r\n      margin: 10px 0;\r\n\r\n      &.secondary {\r\n        font-size: 16px;\r\n        line-height: 1.9;\r\n      }\r\n    }\r\n\r\n    .description {\r\n      margin-bottom: 42px;\r\n    }\r\n\r\n    ul {\r\n      list-style: none;\r\n      padding: 0;\r\n      margin: 0;\r\n      display: flex;\r\n\r\n      &.main-list {\r\n        justify-content: space-between;\r\n        margin-bottom: 50px;\r\n\r\n        li {\r\n          width: 30%;\r\n\r\n          img {\r\n            margin: auto;\r\n          }\r\n        }\r\n      }\r\n\r\n      &.brand-list {\r\n        margin: 0 -20px;\r\n        li {\r\n          width: 21.5%;\r\n          margin: 0 20px;\r\n          height: 160px;\r\n          border: 8px solid #F4F4F4;\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","#backpacks {\r\n    padding-top: 100px;\r\n\r\n    .container {\r\n        max-width: 1405px;\r\n        padding-left: 302px;\r\n        padding-top: 60px;\r\n    }\r\n\r\n    .section-title {\r\n        margin-bottom: 34px;\r\n\r\n        .title {\r\n            font-weight: 200;\r\n            font-size: 48px;\r\n            line-height: 1.3;\r\n            color: #808080;\r\n        }\r\n    }\r\n}\r\n\r\n.row {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin: 0 -32px;\r\n\r\n    &-item {\r\n        width: 27.7%;\r\n        margin: 0 2.8% 50px;\r\n\r\n        .media {\r\n            position: relative;\r\n            padding-bottom: 150%;\r\n            display: block;\r\n            margin-bottom: 20px;\r\n\r\n            img {\r\n                position: absolute;\r\n                top: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                left: 0;\r\n                width: 100%;\r\n                height: 100%;\r\n                object-fit: cover;\r\n            }\r\n        }\r\n\r\n        .label {\r\n            font-family: Roboto;\r\n            font-style: normal;\r\n            font-weight: 300;\r\n            font-size: 18px;\r\n            line-height: 1.27;\r\n            color: #303030;\r\n            margin-bottom: 10px;\r\n        }\r\n\r\n        .price {\r\n            font-family: Roboto;\r\n            font-style: normal;\r\n            font-weight: normal;\r\n            font-size: 14px;\r\n            line-height: 140%;\r\n            color: #808080;\r\n        }\r\n    }\r\n}\r\n\r\n#secondaryPage {\r\n    .container {\r\n        padding: 160px 15px 0 480px;\r\n        max-width: 1760px;\r\n    }\r\n\r\n    .section-payment {\r\n        .delivery-list {\r\n            flex-direction: column;\r\n\r\n            li {\r\n                &+li {\r\n                    margin-top: 20px;\r\n                }\r\n            }\r\n\r\n            .payment_name {\r\n                font-family: Roboto;\r\n                font-style: normal;\r\n                font-weight: 900;\r\n                font-size: 18px;\r\n                line-height: 32px;\r\n                letter-spacing: 0.4em;\r\n                text-transform: uppercase;\r\n                color: #303030;\r\n                margin-bottom: 10px;\r\n            }\r\n\r\n            .payment_description {\r\n                font-family: Roboto;\r\n                font-style: normal;\r\n                font-weight: 400;\r\n                font-size: 14px;\r\n                line-height: 140%;\r\n                color: gray;\r\n                margin: 10px 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.single-post {\r\n    display: flex;\r\n\r\n    &__image {\r\n        margin-right: 5%;\r\n        width: 38%;\r\n        padding-bottom: 57%;\r\n        position: relative;\r\n        height: 0px;\r\n\r\n        img video {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            object-fit: cover;\r\n        }\r\n    }\r\n\r\n    .single-post__content {\r\n        width: 57%;\r\n        padding-top: 25px;\r\n        padding-right: 25px;\r\n    }\r\n\r\n    .title {\r\n        font-family: Montserrat;\r\n        font-style: normal;\r\n        font-weight: 200;\r\n        font-size: 48px;\r\n        line-height: 1;\r\n        color: #808080;\r\n        margin-bottom: 23px;\r\n\r\n        &::after {\r\n            content: '';\r\n            position: absolute;\r\n            top: 50%;\r\n            right: 10px;\r\n            width: 6px;\r\n            height: 4px;\r\n        }\r\n    }\r\n\r\n    .price {\r\n        display: block;\r\n        font-family: Roboto;\r\n        font-style: normal;\r\n        font-weight: normal;\r\n        font-size: 24px;\r\n        line-height: 34px;\r\n        color: #808080;\r\n        margin-bottom: 22px;\r\n    }\r\n\r\n    .buy {\r\n        background: #f8c018;\r\n        border-radius: 4px;\r\n        font-family: Roboto;\r\n        font-style: normal;\r\n        font-weight: 900;\r\n        font-size: 18px;\r\n        line-height: 32px;\r\n        text-align: center;\r\n        letter-spacing: 0.4em;\r\n        text-transform: uppercase;\r\n        color: #ffffff;\r\n        display: inline-block;\r\n        padding: 30px 129px 26px;\r\n        margin-bottom: 36px;\r\n        outline: none;\r\n        border: none;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .delivery-descr {\r\n        font-family: Roboto;\r\n        font-style: normal;\r\n        font-weight: normal;\r\n        font-size: 14px;\r\n        line-height: 20px;\r\n        color: #808080;\r\n        margin-bottom: 44px;\r\n    }\r\n\r\n    .descr-block {\r\n        @extend %listreset;\r\n\r\n        .item {\r\n            padding: 0 20px 28px 0;\r\n            border-top: 2px solid #F0F0F0;\r\n            border-bottom: 2px solid #F0F0F0;\r\n\r\n            &+.item {\r\n                margin-top: -2px;\r\n            }\r\n        }\r\n\r\n        .title-sm {\r\n            font-family: Roboto;\r\n            font-style: normal;\r\n            font-weight: bold;\r\n            font-size: 18px;\r\n            line-height: 25px;\r\n            color: #303030;\r\n            padding: 22px 0 0;\r\n            cursor: pointer;\r\n        }\r\n\r\n        .descr-sm {\r\n            font-family: Roboto;\r\n            font-style: normal;\r\n            font-weight: normal;\r\n            font-size: 14px;\r\n            line-height: 20px;\r\n            color: #808080;\r\n            display: none;\r\n            padding-top: 11px;\r\n        }\r\n    }\r\n}\r\n\r\n.section-contacts {\r\n    a {\r\n        font-family: Montserrat;\r\n        font-style: normal;\r\n        font-weight: 200;\r\n        font-size: 48px;\r\n        line-height: 2;\r\n        color: #000000;\r\n    }\r\n    address {\r\n      font-family: Roboto;\r\n      font-style: normal;\r\n      font-weight: normal;\r\n      font-size: 24px;\r\n      line-height: 2;\r\n      color: #808080;\r\n      margin-bottom: 40px;\r\n    }\r\n\r\n    #map {\r\n      height: 400px;\r\n      position: relative;\r\n      iframe {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%; \r\n      }\r\n    }\r\n}",".site-logo {\r\n  @extend %flex-row, %ai-center;\r\n  max-width: 250px;\r\n  width: 100%;\r\n  &--image {\r\n    max-width: 100px;\r\n    width: 100%;\r\n    position: relative;\r\n    height: 55px;\r\n    margin: 20px 20px 20px 0;\r\n    background: map-deep-get($colors, 'theme', 'logo-bg');\r\n    @include media('<=tablet-lg') {\r\n      max-width: 50px;\r\n      height: 35px;\r\n    }\r\n    &:before,\r\n    &:after {\r\n      @include pseudo;\r\n      @include square(0);\r\n      left: 0;\r\n      border-left: 50px solid transparent;\r\n      border-right: 50px solid transparent;\r\n      @include media('<=tablet-lg') {\r\n        border-width: 25px;\r\n      }\r\n    }\r\n    &:before {\r\n      top: -25px;\r\n      border-bottom: 25px solid map-deep-get($colors, 'theme', 'logo-bg');\r\n      @include media('<=tablet-lg') {\r\n        top: -12.5px;\r\n        border-bottom: 12.5px solid map-deep-get($colors, 'theme', 'logo-bg');\r\n      }\r\n    }\r\n    &:after {\r\n      bottom: -25px;\r\n      border-top: 25px solid map-deep-get($colors, 'theme', 'logo-bg');\r\n      @include media('<=tablet-lg') {\r\n        bottom: -12.5px;\r\n        border-top: 12.5px solid map-deep-get($colors, 'theme', 'logo-bg');\r\n      }\r\n    }\r\n    img {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      max-width: 70px;\r\n      z-index: z('content');\r\n      margin: 0 auto;\r\n      @include media('<=tablet-lg') {\r\n        max-width: 40px;\r\n      }\r\n    }\r\n  }\r\n  span {\r\n    position: relative;\r\n    font: 38px/1.24em map-get($fonts, 'Abel');\r\n    letter-spacing: 5px;\r\n    color: map-deep-get($colors, 'theme', 'dark');\r\n    @include media('<=tablet-lg') {\r\n      font-size: 30px;\r\n    }\r\n    &:before {\r\n      @include pseudo;\r\n      bottom: 0;\r\n      width: 0;\r\n      height: 2px;\r\n      background: map-deep-get($colors, 'theme', 'dark');\r\n      transition: width $animation-time ease;\r\n    }\r\n    &:hover:before {\r\n      width: 100%;\r\n    }\r\n  }\r\n}","@keyframes menuSlideOpen {\r\n  0% {\r\n    left: -320px;\r\n  }\r\n  100% {\r\n    left: 0;\r\n  }\r\n}\r\n\r\n.menu {\r\n  @extend %listreset;\r\n  @extend %flex-row;\r\n  transition: all $animation-time ease-in-out;\r\n  @include media('<=tablet-lg') {\r\n    padding: 0 15px;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    position: fixed;\r\n    z-index: z('hight');\r\n    max-width: 320px;\r\n    width: 100%;\r\n    height: 100vh;\r\n    left: -320px;\r\n    top: 0;\r\n    background: #fff;\r\n    &.opened {\r\n      display: flex;\r\n      animation: menuSlideOpen $animation-time;\r\n      left: 0;\r\n    }\r\n  }\r\n  &__item {\r\n    position: relative;\r\n    margin: 0;\r\n    @include media('<=tablet-lg') {\r\n      position: static;\r\n    }\r\n    &:not(:last-child) {\r\n      margin: 0 15px 0 0;\r\n      @include media('<=tablet-lg') {\r\n        margin: 0;\r\n        padding: 0 0 15px;\r\n      }\r\n    }\r\n    &:hover {\r\n      .menu__link {\r\n        color: map-deep-get($colors, 'theme', 'logo-bg');\r\n        @include media('<=tablet-lg') {\r\n          color: initial;\r\n        }\r\n      }\r\n      .submenu {\r\n        display: block;\r\n      }\r\n    }\r\n    &--active {\r\n      .menu__link {\r\n        color: map-deep-get($colors, 'theme', 'logo-bg');\r\n      }\r\n    }\r\n  }\r\n  &__link {\r\n    display: block;\r\n    padding: 10px 25px;\r\n    margin: 0;\r\n    font: 400 16px/1.24em map-get($fonts, 'Abel');\r\n    color: map-deep-get($colors, 'theme', 'dark');\r\n    transition: color $animation-time ease;\r\n    @include media('<=tablet-lg') {\r\n      font-size: 32px;\r\n      padding: 0;\r\n    }\r\n    &:hover {\r\n      color: map-deep-get($colors, 'theme', 'logo-bg');\r\n    }\r\n    [class^=icon] {\r\n      vertical-align: middle;\r\n      @include media('<=tablet-lg') {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.submenu {\r\n  @extend %listreset;\r\n  @extend %flex-column;\r\n  position: absolute;\r\n  left: 0;\r\n  z-index: z('hight');\r\n  height: auto;\r\n  display: none;\r\n  background-color: map-deep-get($colors, 'theme', 'grey');\r\n  box-shadow: 0 0 3px 0 rgba(map-deep-get($colors, 'theme', 'satan'), 0.25);\r\n  transition: all $animation-time ease-in-out;\r\n  @include media('<=tablet-lg') {\r\n    display: flex !important;\r\n    width: 100%;\r\n    height: 100vh;\r\n    top: 0;\r\n    left: -100%;\r\n    justify-content: center;\r\n    &.opened {\r\n      animation: menuSlideOpen $animation-time;\r\n      left: 0;\r\n    }\r\n  }\r\n  &__item {\r\n    margin: 0;\r\n    display: block;\r\n    width: 100%;\r\n    @include media('<=tablet-lg') {\r\n      margin: 0;\r\n      padding: 0 15px 15px;\r\n    }\r\n    &:hover {\r\n      & > .submenu__link {\r\n        background-color: rgba(map-deep-get($colors, 'theme', 'satan'), 0.04);\r\n        border-color: map-deep-get($colors, 'theme', 'satan');\r\n        @include media('<=tablet-lg') {\r\n          background-color: transparent;\r\n          border-color: transparent;\r\n        }\r\n      }\r\n    }\r\n    &--static {\r\n      display: none;\r\n      position: absolute;\r\n      top: 30px;\r\n      @include media('<=tablet-lg') {\r\n        display: block;\r\n      }\r\n      [class^=icon] {\r\n        font-size: 26px;\r\n      }\r\n    }\r\n  }\r\n  &__link {\r\n    display: block;\r\n    padding: 0 15px;\r\n    font: 400 12px/30px map-get($fonts, 'Abel');\r\n    color: map-deep-get($colors, 'theme', 'dark');\r\n    border-left: 4px solid transparent;\r\n    transition: background-color $animation-time ease;\r\n    @include media('<=tablet-lg') {\r\n      font-size: 32px;\r\n      padding: 0;\r\n    }\r\n  }\r\n}\r\n\r\n.overlay {\r\n  overflow: hidden;\r\n  &:before {\r\n    @include pseudo;\r\n    z-index: z('low');\r\n    width: 100%;\r\n    height: 100vh;\r\n    background: rgba(map-deep-get($colors, 'theme', 'dark'), .75);\r\n  }\r\n}","// Most Used Functions.\r\n//\r\n// You can remove or add your own function in this file.\r\n\r\n// Map deep get\r\n// @author Hugo Giraudel\r\n// @access public\r\n// @param {Map} $map - Map\r\n// @param {Arglist} $keys - Key chain\r\n// @return {*} - Desired value\r\n@function map-deep-get($map, $keys...) {\r\n  @each $key in $keys {\r\n    $map: map-get($map, $key);\r\n  }\r\n  @return $map;\r\n}\r\n\r\n// Update a key deeply nested\r\n// @author Hugo Giraudel\r\n// @param {Map} $map - Map to update\r\n// @param {Arglist} $keys - Keys to access to value to update\r\n// @param {*} $value - New value (last member of `$keys`)\r\n// @return {Map} - Updated map\r\n@function map-deep-set($map, $keys.../*, $value */) {\r\n  $map-list: ($map,);\r\n  $result: null;\r\n  \r\n  @if length($keys) == 2 {\r\n    @return map-merge($map, (nth($keys, 1): nth($keys, -1)));\r\n  }\r\n  \r\n  @for $i from 1 through length($keys) - 2 {\r\n    $map-list: append($map-list, map-get(nth($map-list, -1), nth($keys, $i)));\r\n  }\r\n  \r\n  @for $i from length($map-list) through 1 {\r\n    $result: map-merge(nth($map-list, $i), (nth($keys, $i): if($i == length($map-list), nth($keys, -1), $result)));\r\n  }\r\n  \r\n  @return $result;\r\n}\r\n\r\n// a map-set function (not included with Sass)\r\n@function map-set($map, $key, $value) {\r\n  $new: ($key: $value);\r\n  @return map-merge($map, $new);\r\n}\r\n\r\n// z-indexes\r\n@function z($name) {\r\n  @if index($z-indexes, $name) {\r\n    @return (length($z-indexes) - index($z-indexes, $name))+1;\r\n  }\r\n  \r\n  @else {\r\n    @warn 'There is no item \"#{$name}\" in this list; choose one of: #{$z-indexes}';\r\n    @return null;\r\n  }\r\n}",".hamburger {\r\n  @include square(60px);\r\n  @include mobileVisible('tablet-lg');\r\n  position: relative;\r\n  z-index: z('hight');\r\n  cursor: pointer;\r\n  &.opened {\r\n    background: #fff;\r\n  }\r\n  &__item {\r\n    display: block;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    margin: 0 auto;\r\n    height: 2px;\r\n    width: 30px;\r\n    background: #000;\r\n    border-radius: 8px;\r\n    transition: all $animation-time ease-in-out;\r\n    &:nth-child(1) {\r\n      top: 30px;\r\n      .opened & {\r\n        transform: rotate(45deg);\r\n        top: 32px;\r\n      }\r\n    }\r\n    &:nth-child(2),\r\n    &:nth-child(3) {\r\n      top: 24px;\r\n      .opened & { width: 0; }\r\n    }\r\n    &:nth-child(4) {\r\n      top: 37px;\r\n      .opened & {\r\n        transform: rotate(-45deg);\r\n        top: 32px;\r\n      }\r\n    }\r\n  }\r\n}",".section-title {\r\n  .h2 {\r\n    margin: 0 0 5px;\r\n    font: bold 60px/1.24em map-get($fonts, 'Abel');\r\n    letter-spacing: 1.5px;\r\n    color: map-deep-get($colors, 'theme', 'dark');\r\n    @include media('<=tablet-lg') {\r\n      font-size: 45px;\r\n      letter-spacing: 1px;\r\n    }\r\n    @include media('<=phone-lg') {\r\n      font-size: 30px;\r\n      letter-spacing: .75px;\r\n    }\r\n  }\r\n  .desctiption, \r\n  .back-to-blog {\r\n    margin: 0;\r\n    font: 400 18px/1.24em map-get($fonts, 'SourceSansPro');\r\n    letter-spacing: .5px;\r\n    color: map-deep-get($colors, 'theme', 'satan');\r\n    @include media('<=phone-lg') {\r\n      font-size: 14px;\r\n      letter-spacing: .2px;\r\n    }\r\n  }\r\n  .back-to-blog {\r\n    transition: color $animation-time ease;\r\n    &:hover {\r\n      color: map-deep-get($colors, 'theme', 'dark');\r\n    }\r\n    [class^=icon] {\r\n      font-size: 16px;\r\n      @include media('<=phone-lg') {\r\n        font-size: 12px;\r\n      }\r\n    }\r\n  }\r\n}"]}